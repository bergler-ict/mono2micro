@inject IShoppingBasketService _shoppingBasketService
@implements IDisposable

<div class="text-center">
    <i class="fa fa-shopping-cart text-white" style="font-size: xx-large;"></i>
</div>
<div class="text-white-50 text-center">
    <p style="margin-bottom: 0">@(ShoppingBasket?.TotalQuantity ?? 0) item@((ShoppingBasket?.TotalQuantity ?? 0) != 1 ? "s" : string.Empty)</p>
    <p>@(ShoppingBasket?.TotalPrice.ToString("C") ?? "")</p>
</div>

@code {
    [Parameter]
    public ShoppingBasket ShoppingBasket { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _shoppingBasketService.OnShoppingBasketUpdated += onShoppingBasketUpdated;
        ShoppingBasket = await _shoppingBasketService.GetShoppingBasketAsync();
    }

    private void onShoppingBasketUpdated(ShoppingBasket shoppingBasket)
    {
        ShoppingBasket = shoppingBasket;
        StateHasChanged();
    }

    public void Dispose()
    {
        _shoppingBasketService.OnShoppingBasketUpdated -= onShoppingBasketUpdated;
    }
}
