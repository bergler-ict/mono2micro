@inject IProductsService _productsService

<header>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container d-flex justify-content-between">
            <a class="navbar-brand" href="/"><img class="logo" src="img/bike.png" /></a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    @foreach (var category in categories)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link" href="@("Products/" + @category)">@category</NavLink>
                        </li>
                    }
                </ul>
            </div>
            <div class="align-top h-100">
                <NavLink href="ShoppingBasket">
                    <ShoppingBasketIcon></ShoppingBasketIcon>
                </NavLink>
            </div>
        </div>
    </nav>
</header>

@code {
    private IEnumerable<string> categories = Enumerable.Empty<string>();

    public static string DefaultCategory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await _productsService.GetProductCategoriesAsync();
        DefaultCategory = categories.First();
    }
}